  pipeline {
    agent { label 'CRM-Project' }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                
                    sh 'echo "Node version:" && node -v && echo "npm version:" && npm -v'
                    
                    
                    sh 'npm install'
 
                    sh 'npm install cross-env --save-dev'

                 
                    sh 'npm audit fix'

                     
                    sh 'npm install --save-dev @babel/plugin-transform-numeric-separator @babel/plugin-transform-class-properties @babel/plugin-transform-nullish-coalescing-operator @babel/plugin-transform-private-methods @babel/plugin-transform-optional-chaining'

                    
                    sh 'npm uninstall --save-dev @babel/plugin-proposal-numeric-separator @babel/plugin-proposal-class-properties @babel/plugin-proposal-nullish-coalescing-operator @babel/plugin-proposal-private-methods @babel/plugin-proposal-optional-chaining'

                     
                    sh 'npm install --save-dev @rollup/plugin-terser @eslint/config-array @eslint/object-schema @jridgewell/sourcemap-codec'
                    
                    
                    sh 'npm install react-scripts@latest'
                }
            }
        }

        stage('Build Application') {
            steps {
                script {
                    dir('CRM-frontend') {
                        echo "Starting the application..."
                        sh 'npm start'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build completed successfully.'
        }
        failure {
            echo 'Build failed.'
        }
        always {
            echo 'Cleaning up after the build...'
        }
    }
}
